name: Build wheel on creating tag

on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9 #install the python version needed
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install pkutils
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check Linting
        continue-on-error: true
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./aimlp_feature_generation ./test"
          version: "22.3.0"
      - name: Build wheel
        run: |
          python setup.py sdist bdist_wheel

      - name: Find Wheel File
        id: find_wheel_file
        run: |
          WHEEL_FILE=$(find ./dist -type f -name "*.whl")
          echo "Found wheel file: $WHEEL_FILE"
          echo "::set-output name=wheel_file::$WHEEL_FILE"

      - name: Set Package Name
        id: set_package_name
        run: |
          PACKAGE_NAME=$(python get_whl_file_name.py)
          echo "::set-output name=package_name::$PACKAGE_NAME"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.Find_Wheel_File.outputs.wheel_file }}
          asset_name: ${{ steps.set_package_name.outputs.package_name }}
          asset_content_type: application/octet-stream
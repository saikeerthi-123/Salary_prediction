name: Build wheel on creating tag

on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9 #install the python version needed
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install pkutils
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check Linting
        continue-on-error: true
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./aimlp_feature_generation ./test"
          version: "22.3.0"
      - name: Build wheel
        run: |
          python setup.py sdist bdist_wheel

      - name: Find Wheel File
        run: |
            WHEEL_FILE=$(find ./dist -type f -name "*.whl")
            echo "Found wheel file: $WHEEL_FILE"
            echo "::set-output name=wheel_file::$WHEEL_FILE"
      - name: Get Release ID
        id: get_release_id
        run: |
            echo "::set-output name=release_id::$(curl -s -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }}" | jq -r '.id')"
        shell: bash
      - name: Extract Asset Name
        id: extract_asset_name
        run: |
          echo "::set-output name=asset_name::$(unzip -l ${{ steps.Find_Wheel_File.outputs.wheel_file }} | grep -oP '(?<=inflating: )[^/]+')"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets?name=${{ steps.Find_Wheel_File.outputs.wheel_file }}"
          asset_path: ${{ steps.Find_Wheel_File.outputs.wheel_file }}
          asset_name: ${{ steps.extract_asset_name.outputs.asset_name }}
          asset_content_type: application/octet-stream
name: Build wheel on creating tag

on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9 #install the python version needed
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install pkutils
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check Linting
        continue-on-error: true
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./aimlp_feature_generation ./test"
          version: "22.3.0"
      - name: Test with pytest
        run: |
          python -m pytest test
      - name: Build wheel
        run: |
          python setup.py bdist_wheel
      - name: Set Asset Path
        id: set_asset_path
        run: echo "::set-output name=asset_path::dist/*.whl"
      - name: Extract Asset Name
        id: extract_asset_name
        run: |
          asset_path="${{ steps.set_asset_path.outputs.asset_path }}"
          asset_name=$(basename "$asset_path")
          echo "::set-output name=asset_name::$asset_name"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload WHL as Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.set_asset_path.outputs.asset_path }}
          asset_name: ${{ steps.extract_asset_name.outputs.asset_name }}
          asset_content_type: application/octet-stream

      - name: Display Asset URL
        run: |
          echo "Asset URL: ${{ steps.upload_asset.outputs.browser_download_url }}"